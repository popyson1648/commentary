const tocMap=new Map;let onlyActive=null;const addActive=e=>{onlyActive&&(onlyActive.classList.remove("active"),onlyActive=null),tocMap.get(e.target).classList.add("active")},removeActive=e=>{let t=0,c=null;tocMap.forEach((e=>{e.classList.contains("active")&&(t++,c=e)})),t<=1?onlyActive=c:tocMap.get(e.target).classList.remove("active")},observer=new IntersectionObserver((e=>{e.forEach((e=>{var t;e.isIntersecting?(t=e,onlyActive&&(onlyActive.classList.remove("active"),onlyActive=null),tocMap.get(t.target).classList.add("active")):removeActive(e)}))}),{root:document.querySelector("content")});document.querySelectorAll("a.header").forEach((e=>{observer.observe(e);const t=document.createElement("a");t.appendChild(document.createTextNode(e.text)),t.href=e.href,t.classList.add(e.parentElement.tagName),document.getElementsByClassName("pagetoc")[0].appendChild(t),tocMap.set(e,t)}));