(()=>{const e=localStorage.getItem("mdbook-theme");if(!e)return void(document.querySelector('meta[name="theme-color"]').content=window.getComputedStyle(document.body).backgroundColor);const t=document.getElementById("start").dataset.defaulttheme;if(e==t)return;const n=document.querySelector("html");n.classList.remove(t),n.classList.add(e)})(),(()=>{const e=(()=>{const e=localStorage.getItem("mdbook-sidebar");return e||(document.body.clientWidth<750?"hidden":"visible")})();if("visible"==e)return;const t=document.querySelector("html");t.classList.remove("sidebar-visible"),t.classList.add("sidebar-"+e)})();const attributeExternalLinks=()=>{document.querySelectorAll('.content main a[href^="http"]').forEach((e=>{e.setAttribute("target","_blank"),e.setAttribute("rel","noopener")}))},createTableOfContents=()=>{const e=new Map;let t=null;const n=new IntersectionObserver((n=>{n.forEach((n=>{var o;n.isIntersecting?(o=n,t&&(t.classList.remove("active"),t=null),e.get(o.target).classList.add("active")):(n=>{let o=0,r=null;e.forEach((e=>{e.classList.contains("active")&&(o++,r=e)})),o<=1?t=r:e.get(n.target).classList.remove("active")})(n)}))}),{root:document.querySelector("content")});document.querySelectorAll(".content a.header").forEach((t=>{n.observe(t);const o=document.createElement("a");o.appendChild(document.createTextNode(t.text)),o.href=t.href,o.classList.add(t.parentElement.tagName),document.getElementsByClassName("pagetoc")[0].appendChild(o),e.set(t,o)}))};document.addEventListener("DOMContentLoaded",(()=>{document.querySelectorAll('.content main a[href^="http"]').forEach((e=>{e.setAttribute("target","_blank"),e.setAttribute("rel","noopener")})),createTableOfContents()}),{once:!0,passive:!0});